

[[Elasticsearch_Namespaces_NodesNamespace]]
=== Elasticsearch\Namespaces\NodesNamespace



Class NodesNamespace


*Methods*

The class defines the following methods:

* <<Elasticsearch_Namespaces_NodesNamespacestats_stats,`stats()`>>
* <<Elasticsearch_Namespaces_NodesNamespaceinfo_info,`info()`>>
* <<Elasticsearch_Namespaces_NodesNamespacehotThreads_hotThreads,`hotThreads()`>>
* <<Elasticsearch_Namespaces_NodesNamespaceshutdown_shutdown,`shutdown()`>>



[[Elasticsearch_Namespaces_NodesNamespacestats_stats]]
.`stats()`
****
[source,php]
----
/*
$params['metric']            = (list) Limit the information returned to the specified metrics
       ['index_metric']      = (list) Limit the information returned for `indices` metric to the specific index
metrics. Isn't used if `indices` (or `all`) metric isn't specified.
       ['body']  = (array) Request body
*/

$params = [
    // ...
];

$client = ClientBuilder::create()->build();
$response = $client->nodes()->stats($params);
----
****



[[Elasticsearch_Namespaces_NodesNamespaceinfo_info]]
.`info()`
****
[source,php]
----
/*
$params['node_id']       = (list) A comma-separated list of node IDs or names to limit the returned information;
use `_local` to return information from the node you're connecting to, leave empty to get information from all
nodes
       ['metric']        = (list) A comma-separated list of metrics you wish returned. Leave empty to return
all.
       ['body']  = (array) Request body
*/

$params = [
    // ...
];

$client = ClientBuilder::create()->build();
$response = $client->nodes()->info($params);
----
****



[[Elasticsearch_Namespaces_NodesNamespacehotThreads_hotThreads]]
.`hotThreads()`
****
[source,php]
----
/*
$params['node_id']             = (list) A comma-separated list of node IDs or names to limit the returned
information; use `_local` to return information from the node you're connecting to, leave empty to get
information from all nodes
       ['interval']            = (time) The interval for the second sampling of threads
       ['snapshots']           = (number) Number of samples of thread stacktrace (default: 10)
       ['threads']             = (number) Specify the number of threads to provide information for (default: 3)
       ['ignore_idle_threads'] = (boolean) Don't show threads that are in known-idle places, such as waiting on
a socket select or pulling from an empty task queue (default: true)
       ['type']                = (enum) The type to sample (default: cpu) (cpu,wait,block)
       ['timeout']             = (time) Explicit operation timeout
       ['body']  = (array) Request body
*/

$params = [
    // ...
];

$client = ClientBuilder::create()->build();
$response = $client->nodes()->hotThreads($params);
----
****



[[Elasticsearch_Namespaces_NodesNamespaceshutdown_shutdown]]
.`shutdown()`
****
[source,php]
----
/*
*/

$params = [
    // ...
];

$client = ClientBuilder::create()->build();
$response = $client->nodes()->shutdown($params);
----
****


